version: 2

project_name: secretinit

before:
  hooks:
    - go mod tidy
    - go generate ./...

builds:
  # Full build with all backends (default)
  - id: main
    binary: secretinit
    main: ./cmd/secretinit/
    flags:
      - -trimpath # Remove absolute paths for smaller binaries and reproducible builds
    env:
      - CGO_ENABLED=0 # Pure Go builds for better portability and smaller size
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    # For maximum tree shaking and smallest binaries
    tags:
      - netgo    # Pure Go networking (no libc dependencies)
      - osuser   # Pure Go user lookups  
      - osusergo # Additional user lookup optimizations
    # 'ldflags' are passed to the Go linker.
    # -s: Omit the symbol table.
    # -w: Omit the DWARF debugging information.
    # -X: Inject version variables at build time.
    # --extldflags '-static': Statically link any external libraries (important with CGO).
    #                        While redundant with CGO_ENABLED=0, it's a good safeguard.
    ldflags:
      - -s -w -X main.version={{.Version}}  # Strip symbols and debug info
      - -extldflags=-static                  # Static linking for Linux
      - -buildmode=exe                       # Optimize for executable

  # Git-only build (minimal, no cloud SDKs - significantly smaller)
  - id: git-only
    binary: secretinit-git
    main: ./cmd/secretinit/
    flags:
      - -trimpath
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    tags:
      - netgo
      - osuser
      - osusergo
      - git_only  # Custom build tag to exclude cloud backends
    ldflags:
      - -s -w -X main.version={{.Version}}
      - -extldflags=-static
      - -buildmode=exe

  # AWS-only build (git + AWS, excludes GCP and Azure SDKs)
  - id: aws-only
    binary: secretinit-aws
    main: ./cmd/secretinit/
    flags:
      - -trimpath
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    tags:
      - netgo
      - osuser
      - osusergo
      - aws_only  # Custom build tag
    ldflags:
      - -s -w -X main.version={{.Version}}
      - -extldflags=-static
      - -buildmode=exe

  # GCP-only build (git + GCP, excludes AWS and Azure SDKs)
  - id: gcp-only
    binary: secretinit-gcp
    main: ./cmd/secretinit/
    flags:
      - -trimpath
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    tags:
      - netgo
      - osuser
      - osusergo
      - gcp_only  # Custom build tag
    ldflags:
      - -s -w -X main.version={{.Version}}
      - -extldflags=-static
      - -buildmode=exe

  # Azure-only build (git + Azure, excludes AWS and GCP SDKs)
  - id: azure-only
    binary: secretinit-azure
    main: ./cmd/secretinit/
    flags:
      - -trimpath
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    tags:
      - netgo
      - osuser
      - osusergo
      - azure_only  # Custom build tag
    ldflags:
      - -s -w -X main.version={{.Version}}
      - -extldflags=-static
      - -buildmode=exe

archives:
  - id: main
    formats: [ tar.gz, binary ]
    name_template: "{{ .ProjectName }}_{{ .Os }}_{{ .Arch }}"
    format_overrides:
      - goos: windows
        formats: [ zip, binary ]
    files:
      - none* # No additional files to include in the archive.
    # files:
    #   - README.md
    #   - LICENSE

checksum:
  # name_template: '{{ .ProjectName }}_checksums.txt'
  name_template: 'checksums.txt'

snapshot:
  version_template: "{{ .Tag }}-next"

changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - 'Merge pull request'
      - 'Merge branch'

release:
  draft: false
  prerelease: auto